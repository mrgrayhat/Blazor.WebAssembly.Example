@page "/newpost"
@attribute [Authorize]
@inject IBlogClient BlogClient
@inject NavigationManager navigator
@inject ToastService toastService

<div class="container">

    <div class="row">

        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#">Blog</a></li>
                <li class="breadcrumb-item active" aria-current="page">New Post</li>
            </ol>
        </nav>
    </div>

    <EditForm Model="PostDto" OnValidSubmit="HanleValidSubmit">
        <DataAnnotationsValidator />
        <i class="oi oi-warning" />
        <div class="row mt-4">
            <ValidationSummary />
        </div>

        @*<div class="row mt-4">
                <i class="oi oi-person" />
                <label for="author"> Author</label>
                <InputText id="author" @bind-Value="PostDto.Author" class="form-control" />
            </div>*@
        <div class="row mt-4">
            <i class="oi oi-header" />
            <label for="title"> Title</label>
            <InputText id="title" @bind-Value="PostDto.Title" class="form-control" />
        </div>
        <div class="row mt-4">
            <i class="oi oi-text" />
            <label for="body"> Body</label>
            <InputTextArea id="body" @bind-Value="PostDto.Body" class="form-control" rows="10" />
        </div>
        @*<div class="row mt-4">
                <i class="oi oi-data-transfer-upload" />
                <label for="thumbnail"> Thumbnail Photo</label>
                <InputText name="thumbnail" id="thumbnail" @bind-Value="PostDto.Thumbnail" class="form-control" />
            </div>*@
        <Upload @bind-value="PostDto.Thumbnail" />

        <div class="row mt-4">
            <i class="oi oi-tags" />
            <label for="tags"> Tags (Seperate by ;)</label>
            <InputText id="tags" @bind-Value="PostDto.Tags" class="form-control" />
        </div>
        <div class="row mt-4">
            <i class="oi oi-info" />
            <label for="description"> Description</label>
            <InputText id="description" @bind-Value="PostDto.Description" class="form-control" />
        </div>
        <div class="row mt-4">

            <button class="btn btn-primary" type="submit">
                <i class="oi oi-pencil" />
                Publish
            </button>
        </div>
    </EditForm>
</div>

@functions{

    PostDto PostDto { get; set; } = new PostDto();


    protected async void HanleValidSubmit()
    {
        var response = await BlogClient.PostAsync(PostDto).ConfigureAwait(false);
        if (response.Succeeded)
        {
            toastService.ShowToast("Post Published Successfully!", ToastLevel.SUCCESS);
            navigator.NavigateTo($"/post/{(int)response.Data}");
        }
    }

}
